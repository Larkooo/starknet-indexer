// Code generated by entc, DO NOT EDIT.

package event

const (
	// Label holds the string label denoting the event type in the database.
	Label = "event"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldFrom holds the string denoting the from field in the database.
	FieldFrom = "from"
	// FieldKeys holds the string denoting the keys field in the database.
	FieldKeys = "keys"
	// FieldData holds the string denoting the data field in the database.
	FieldData = "data"
	// EdgeTransaction holds the string denoting the transaction edge name in mutations.
	EdgeTransaction = "transaction"
	// Table holds the table name of the event in the database.
	Table = "events"
	// TransactionTable is the table that holds the transaction relation/edge.
	TransactionTable = "events"
	// TransactionInverseTable is the table name for the Transaction entity.
	// It exists in this package in order to avoid circular dependency with the "transaction" package.
	TransactionInverseTable = "transactions"
	// TransactionColumn is the table column denoting the transaction relation/edge.
	TransactionColumn = "transaction_events"
)

// Columns holds all SQL columns for event fields.
var Columns = []string{
	FieldID,
	FieldFrom,
	FieldKeys,
	FieldData,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "events"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"transaction_events",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
