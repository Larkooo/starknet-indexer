// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"
)

// CreateAccountInput represents a mutation input for creating accounts.
type CreateAccountInput struct {
	Address   string
	CreatedAt *time.Time
}

// Mutate applies the CreateAccountInput on the AccountCreate builder.
func (i *CreateAccountInput) Mutate(m *AccountCreate) {
	m.SetAddress(i.Address)
	if v := i.CreatedAt; v != nil {
		m.SetCreatedAt(*v)
	}
}

// SetInput applies the change-set in the CreateAccountInput on the create builder.
func (c *AccountCreate) SetInput(i CreateAccountInput) *AccountCreate {
	i.Mutate(c)
	return c
}

// UpdateAccountInput represents a mutation input for updating accounts.
type UpdateAccountInput struct {
	Address *string
}

// Mutate applies the UpdateAccountInput on the AccountMutation.
func (i *UpdateAccountInput) Mutate(m *AccountMutation) {
	if v := i.Address; v != nil {
		m.SetAddress(*v)
	}
}

// SetInput applies the change-set in the UpdateAccountInput on the update builder.
func (u *AccountUpdate) SetInput(i UpdateAccountInput) *AccountUpdate {
	i.Mutate(u.Mutation())
	return u
}

// SetInput applies the change-set in the UpdateAccountInput on the update-one builder.
func (u *AccountUpdateOne) SetInput(i UpdateAccountInput) *AccountUpdateOne {
	i.Mutate(u.Mutation())
	return u
}
