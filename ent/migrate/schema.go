// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// BlocksColumns holds the columns for the "blocks" table.
	BlocksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "block_hash", Type: field.TypeString, Unique: true},
		{Name: "parent_block_hash", Type: field.TypeString},
		{Name: "block_number", Type: field.TypeUint64, Unique: true},
		{Name: "state_root", Type: field.TypeString},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"ACCEPTED_ON_L1", "ACCEPTED_ON_L2"}},
		{Name: "timestamp", Type: field.TypeTime},
	}
	// BlocksTable holds the schema information for the "blocks" table.
	BlocksTable = &schema.Table{
		Name:       "blocks",
		Columns:    BlocksColumns,
		PrimaryKey: []*schema.Column{BlocksColumns[0]},
	}
	// TransactionsColumns holds the columns for the "transactions" table.
	TransactionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "contract_address", Type: field.TypeString},
		{Name: "entry_point_selector", Type: field.TypeString, Nullable: true},
		{Name: "transaction_hash", Type: field.TypeString},
		{Name: "calldata", Type: field.TypeJSON},
		{Name: "signature", Type: field.TypeJSON, Nullable: true},
		{Name: "nonce", Type: field.TypeString, Nullable: true},
		{Name: "block_transactions", Type: field.TypeString, Nullable: true},
	}
	// TransactionsTable holds the schema information for the "transactions" table.
	TransactionsTable = &schema.Table{
		Name:       "transactions",
		Columns:    TransactionsColumns,
		PrimaryKey: []*schema.Column{TransactionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "transactions_blocks_transactions",
				Columns:    []*schema.Column{TransactionsColumns[7]},
				RefColumns: []*schema.Column{BlocksColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TransactionReceiptsColumns holds the columns for the "transaction_receipts" table.
	TransactionReceiptsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "transaction_hash", Type: field.TypeString},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"UNKNOWN", "RECEIVED", "PENDING", "ACCEPTED_ON_L2", "ACCEPTED_ON_L1", "REJECTED"}},
		{Name: "status_data", Type: field.TypeString},
		{Name: "messages_sent", Type: field.TypeJSON},
		{Name: "l1_origin_message", Type: field.TypeJSON},
		{Name: "events", Type: field.TypeJSON},
		{Name: "block_transaction_receipts", Type: field.TypeString, Nullable: true},
		{Name: "transaction_receipts", Type: field.TypeString, Nullable: true},
	}
	// TransactionReceiptsTable holds the schema information for the "transaction_receipts" table.
	TransactionReceiptsTable = &schema.Table{
		Name:       "transaction_receipts",
		Columns:    TransactionReceiptsColumns,
		PrimaryKey: []*schema.Column{TransactionReceiptsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "transaction_receipts_blocks_transaction_receipts",
				Columns:    []*schema.Column{TransactionReceiptsColumns[7]},
				RefColumns: []*schema.Column{BlocksColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "transaction_receipts_transactions_receipts",
				Columns:    []*schema.Column{TransactionReceiptsColumns[8]},
				RefColumns: []*schema.Column{TransactionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		BlocksTable,
		TransactionsTable,
		TransactionReceiptsTable,
	}
)

func init() {
	TransactionsTable.ForeignKeys[0].RefTable = BlocksTable
	TransactionReceiptsTable.ForeignKeys[0].RefTable = BlocksTable
	TransactionReceiptsTable.ForeignKeys[1].RefTable = TransactionsTable
}
